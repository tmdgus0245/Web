https://start.spring.io 에서 spring project를 생성할 수 있음

Dependencies : 어떤 라이브러리를 가져와서 쓸지 추가하는 작업

resources에는 자바 파일을 제외한 html이나 설정파일들이 들어가 있음

Dependencies에서 원하는 라이브러리를 추가하면 관련된 필요한 라이브러리들(spring-core, starter)을 다 알아서 추가함

스프링이 자바 웹, 앱 개발에 있어 전반적인걸 지원해주기 때문에 양이 방대함 -> 찾아서 쓰는 능력을 필요
  spring.io -> Projects -> Spring Boot -> LEARN -> 쓰고있는 버전의 Reference Doc을 들어가 검색

스프링 부트는 static과 templated welcome pages들을 지원. 먼저 static에서 index.html을 찾아보고 없으면 index template를 찾아봄 찾았다면 자동으로 welcome page로 사용

컨트롤러에서 리턴 값으로 문자(viewName)를 반환하면 뷰 리졸버(viewResolver)가 화면을 찾아서 처리한다
	- 스프링 부트 템플릿 엔진 기본 viewName매핑
	- resources:templates에 (viewName).html

CMD로 빌드하는법
spring 폴더로 들어가 gradlew build -> cd build -> cd libs -> libs에 있는 파일중 plain이 없는 파일을 java -jar hello-spring-0.0.1-SNAPSHOT.jar 하면 실행됨
잘 안될 시) gradlew build 할때 gradlew clean build를 하자 (clean : build 파일을 아예 제거)

정적 컨텐츠: html 파일을 변함없이 그냥 보여주는 것
MVC와 템플릿 엔진: html 파일을 서버에서 조금 변형을 시켜 보여주는 것
API: 안드로이드나 아이폰 클라이언트랑 개발을 해야할 경우 서버입장에서는 json 포맷으로 데이터를 전달 (서버끼리 통신할 때, vue, react)

정적 컨텐츠 요청이 내장 톰켓 서버로 들어오고 스프링한테 넘김 스프링은 관련 컨트롤러를 먼저 찾아보고 static에서 찾아봄 찾은 html파일을 반환